[{"E:\\Backup\\Desktop\\Project\\frontend\\src\\index.js":"1","E:\\Backup\\Desktop\\Project\\frontend\\src\\Routes.js":"2","E:\\Backup\\Desktop\\Project\\frontend\\src\\core\\HOme.js":"3","E:\\Backup\\Desktop\\Project\\frontend\\src\\user\\Signin.js":"4","E:\\Backup\\Desktop\\Project\\frontend\\src\\user\\Signup.js":"5","E:\\Backup\\Desktop\\Project\\frontend\\src\\core\\Base.js":"6","E:\\Backup\\Desktop\\Project\\frontend\\src\\auth\\authHelper\\index.js":"7","E:\\Backup\\Desktop\\Project\\frontend\\src\\core\\Menu.js":"8","E:\\Backup\\Desktop\\Project\\frontend\\src\\backend.js":"9","E:\\Backup\\Desktop\\Project\\frontend\\src\\auth\\authHelper\\PrivateRoute.js":"10","E:\\Backup\\Desktop\\Project\\frontend\\src\\auth\\authHelper\\AdminRoute.js":"11","E:\\Backup\\Desktop\\Project\\frontend\\src\\user\\UserDashboard.js":"12","E:\\Backup\\Desktop\\Project\\frontend\\src\\user\\AdminDashboard.js":"13","E:\\Backup\\Desktop\\Project\\frontend\\src\\admin\\CreateCategory.js":"14","E:\\Backup\\Desktop\\Project\\frontend\\src\\admin\\adminHelper\\index.js":"15","E:\\Backup\\Desktop\\Project\\frontend\\src\\admin\\CreateProduct.js":"16","E:\\Backup\\Desktop\\Project\\frontend\\src\\admin\\ManageCategory.js":"17","E:\\Backup\\Desktop\\Project\\frontend\\src\\admin\\ManageProducts.js":"18","E:\\Backup\\Desktop\\Project\\frontend\\src\\admin\\UpdateCategoy.js":"19"},{"size":162,"mtime":1609917167141,"results":"20","hashOfConfig":"21"},{"size":1685,"mtime":1616432812666,"results":"22","hashOfConfig":"21"},{"size":656,"mtime":1610423666644,"results":"23","hashOfConfig":"21"},{"size":3664,"mtime":1615986492086,"results":"24","hashOfConfig":"21"},{"size":3792,"mtime":1615094992559,"results":"25","hashOfConfig":"21"},{"size":1168,"mtime":1616435758544,"results":"26","hashOfConfig":"21"},{"size":1757,"mtime":1612423576576,"results":"27","hashOfConfig":"21"},{"size":2914,"mtime":1616251929266,"results":"28","hashOfConfig":"21"},{"size":45,"mtime":1610737575603,"results":"29","hashOfConfig":"21"},{"size":594,"mtime":1614784063747,"results":"30","hashOfConfig":"21"},{"size":627,"mtime":1614784045633,"results":"31","hashOfConfig":"21"},{"size":2473,"mtime":1614926048413,"results":"32","hashOfConfig":"21"},{"size":3036,"mtime":1615698375509,"results":"33","hashOfConfig":"21"},{"size":2897,"mtime":1616436787275,"results":"34","hashOfConfig":"21"},{"size":3305,"mtime":1616436723861,"results":"35","hashOfConfig":"21"},{"size":4993,"mtime":1616251247267,"results":"36","hashOfConfig":"21"},{"size":3161,"mtime":1616255803914,"results":"37","hashOfConfig":"21"},{"size":3028,"mtime":1616255789670,"results":"38","hashOfConfig":"21"},{"size":3281,"mtime":1616487324823,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"zos1jo",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Backup\\Desktop\\Project\\frontend\\src\\index.js",[],["84","85"],"E:\\Backup\\Desktop\\Project\\frontend\\src\\Routes.js",[],"E:\\Backup\\Desktop\\Project\\frontend\\src\\core\\HOme.js",[],"E:\\Backup\\Desktop\\Project\\frontend\\src\\user\\Signin.js",[],"E:\\Backup\\Desktop\\Project\\frontend\\src\\user\\Signup.js",["86"],"import React, { useState } from \"react\";\r\nimport Base from \"../core/Base\"\r\nimport \"./styles.css\"\r\nimport { Link , Redirect} from \"react-router-dom\";\r\nimport { signup, isSignedin } from \"../auth/authHelper\";\r\n\r\n\r\nconst Signup = ({history}) =>{\r\n    const [values,setValues] = useState({\r\n        name:\"\",\r\n        email:\"\",\r\n        password:\"\",\r\n        phone:\"\",\r\n        error:\"\",\r\n        success:false\r\n    })\r\n\r\n    const {name,email,password,phone,error,success} = values\r\n\r\n    const handleChange = name => events=>{\r\n        setValues({...values, error:false, [name]: events.target.value})\r\n    }\r\n\r\n    const onSubmit = e =>{\r\n        e.preventDefault();\r\n        setValues({...values, error:\"\"})\r\n        signup({name,email,password,phone}).then(data =>{\r\n            if(data.error){\r\n                setValues({...values,error:data.error,success:false})\r\n            }\r\n            else{\r\n                setValues({\r\n                    name:\"\",\r\n                    email:\"\",\r\n                    password:\"\",\r\n                    phone:\"\",\r\n                    error:\"\",\r\n                    success:true\r\n                })\r\n            }\r\n        }).catch(error =>{\r\n            console.log(error)\r\n        });\r\n    }\r\n\r\n    //checking if user already signed in\r\n    const issignin = () =>{\r\n        if(isSignedin()){\r\n            return history.push(\"/\")\r\n        }\r\n    }\r\n\r\n    const signupForm= () =>(\r\n        <div className=\"row1\">\r\n            <form>\r\n                <div className=\"alert alert-success\" style={{display: success ? \"\" : \"none\"}}>\r\n                    Account Created. Click here to <Link to=\"/signin\" >Login</Link>\r\n                </div>\r\n                <div className=\"alert alert-warning\" style={{display: error ? \"\" : \"none\"}}>\r\n                    {error}\r\n                </div>\r\n                <div className=\"input\">\r\n                    <input \r\n                        onChange={handleChange(\"email\")}\r\n                        type=\"text\" \r\n                        placeholder=\"Email\"\r\n                        value={email} />\r\n                </div>\r\n                <div className=\"input\">\r\n                    <input\r\n                        onChange={handleChange(\"name\")} \r\n                        type=\"text\" \r\n                        placeholder=\"Name\"\r\n                        value={name} />\r\n                </div>\r\n                <div className=\"input\">\r\n                    <input\r\n                        onChange={handleChange(\"phone\")} \r\n                        type=\"text\" \r\n                        placeholder=\"Mobile Number\"\r\n                        value={phone} />\r\n                </div>\r\n                <div className=\"input\">\r\n                    <input\r\n                        onChange={handleChange(\"password\")} \r\n                        type=\"password\" \r\n                        placeholder=\"Password\"\r\n                        value={password} />\r\n                </div>\r\n                <button onClick={onSubmit} className=\"btn btn-outline-success btn-\"><p>Signup</p></button>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n    const loginbtn = () =>{ \r\n        return(\r\n            <div className=\"row1\">\r\n                <form>\r\n                    <h3>Already have an account!</h3>\r\n                    <Link className=\"btn btn-outline-success \" to=\"/signin\">Signin</Link>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    return(\r\n        <Base className=\"row mx-auto\" title=\"Signup to new account\" onLoad= {issignin()}>\r\n            <div className=\"col-6 mx-auto\">\r\n                {signupForm()}\r\n                \r\n            </div>\r\n            <div className=\"col-6 mx-auto\">\r\n                {loginbtn()}\r\n            </div>\r\n        </Base>\r\n    )\r\n}\r\n \r\nexport default Signup","E:\\Backup\\Desktop\\Project\\frontend\\src\\core\\Base.js",[],"E:\\Backup\\Desktop\\Project\\frontend\\src\\auth\\authHelper\\index.js",[],"E:\\Backup\\Desktop\\Project\\frontend\\src\\core\\Menu.js",[],"E:\\Backup\\Desktop\\Project\\frontend\\src\\backend.js",[],"E:\\Backup\\Desktop\\Project\\frontend\\src\\auth\\authHelper\\PrivateRoute.js",[],"E:\\Backup\\Desktop\\Project\\frontend\\src\\auth\\authHelper\\AdminRoute.js",[],"E:\\Backup\\Desktop\\Project\\frontend\\src\\user\\UserDashboard.js",[],"E:\\Backup\\Desktop\\Project\\frontend\\src\\user\\AdminDashboard.js",["87"],"import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { isAuthenticated } from \"../auth/authHelper/index\"\r\nimport Base from \"../core/Base\"\r\n\r\n\r\nconst AdminDashboard = () =>{\r\n    \r\n    const { user: {name , email, role} } = isAuthenticated();\r\n    \r\n    const AdminLeftSide = () =>{\r\n        return(\r\n            <div className=\"card \">\r\n                <h4 className=\"card-header bg-dark text-white lead\">Admin Bar</h4>\r\n                \r\n                <ul className=\"list-group list-unstyled\">\r\n                <li className=\"list-group-items \">\r\n                        <Link to=\"/admin/user/update\" className=\"nav-link text-succeess\"> Update User Details </Link>\r\n                    </li>\r\n                    <li className=\"list-group-items \">\r\n                        <Link to=\"/admin/create/category\" className=\"nav-link text-succeess\"> Create Category </Link>\r\n                    </li>\r\n                    <li className=\"list-group-items\">\r\n                        <Link to=\"/admin/manage/categories\" className=\"nav-link text-succeess\"> Manage Category </Link>\r\n                    </li>\r\n                    <li className=\"list-group-items\">\r\n                        <Link to=\"/admin/create/product\" className=\"nav-link text-succeess\"> Create Product </Link>\r\n                    </li>\r\n                    <li className=\"list-group-items\">\r\n                        <Link to=\"/admin/manage/products\" className=\"nav-link text-succeess\"> Manage Products </Link>\r\n                    </li>\r\n                    <li className=\"list-group-items\">\r\n                        <Link to=\"/admin/orders\" className=\"nav-link text-succeess\"> Manage Orders </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    const AdminRightSide = () => {\r\n        return(\r\n            <div className=\"card mb-4 \" >\r\n                <h4 className=\"card-header bg-dark text-white lead\">Info Panel</h4>\r\n                <li className=\"list-group-item  bg-dark\">\r\n                <span className=\"lead \"><span className=\"badge badge-warning text-info\">You are an Admin</span></span>\r\n                </li>\r\n                <ul className=\"list-group list-unstyled\">\r\n                    <li className=\"list-group-item  bg-dark\">\r\n                        <span className=\"badge display-3 badge-success\">Name: {name}</span>\r\n                    </li>\r\n                    <li className=\"list-group-item  bg-dark\">\r\n                        <span className=\"badge display-3 badge-success\">Email: {email}</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <Base title=\"Admin Dashboard\" description= \"Manage Your Account\" className=\"container p-4 bg-success\">\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">{AdminLeftSide()}</div>\r\n                <div className=\"col-9\">{AdminRightSide()}</div>\r\n            </div>\r\n        </Base>\r\n    )               \r\n}\r\n\r\nexport default AdminDashboard;","E:\\Backup\\Desktop\\Project\\frontend\\src\\admin\\CreateCategory.js",["88"],"import React ,{useState}from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth/authHelper\";\r\nimport  Base  from \"../core/Base\";\r\nimport {AddCategory} from \"./adminHelper/index\"\r\n\r\nconst CreateCategory = () =>{\r\n    const [year,setYear] = useState(\"\")\r\n    const [error,setError] =useState(false)\r\n    const [success,setSuccess]=useState(false)\r\n    const {user,token} = isAuthenticated();\r\n\r\n    \r\n    const handleChange = event=> (\r\n        setError(\"\"),\r\n        setYear(event.target.value)\r\n    )\r\n\r\n    const onSubmit = e =>{\r\n        e.preventDefault()\r\n        setSuccess(false)\r\n        AddCategory(user._id,token,{year})\r\n            .then( data =>{\r\n                if(data == null || data.Error){\r\n                    setError(true)\r\n                }\r\n                else if(data.err){\r\n                    setError(true)\r\n                }\r\n                else{\r\n                    setError(\"\")\r\n                    setSuccess(true)\r\n                    setYear(\"\")\r\n                }\r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n            })\r\n        \r\n    }\r\n\r\n    const successMsg = () =>{\r\n        if (success){\r\n            return <h4 className=\"text-success\">Category Created Successfully</h4>\r\n        }\r\n    }\r\n\r\n    const warningMsg = () =>{\r\n        if (error){\r\n            return <h4 className=\"text-warninig\">Unable to Create Category</h4>\r\n        }\r\n    }\r\n\r\n    const myCategoryForm = () =>{\r\n        return(\r\n            <form>\r\n                <div className=\"form-group\">\r\n                    <h3 className=\"lead card-header\">Add Year wise Category<span className=\"text-muted\">(in number)</span></h3>\r\n                    <input \r\n                        onChange={handleChange} \r\n                        value={year}\r\n                        className=\"form-control my-3\" \r\n                        type=\"text\" \r\n                        autoFocus required placeholder=\"For Ex. : 4\"/>\r\n                    <button onClick={onSubmit} className=\"btn btn-outline-info\">Create</button> \r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n\r\n    const goBack = () =>{\r\n        return (\r\n            <div>\r\n                <Link className=\"btn  btn-outline-danger\" to=\"/admin/dashboard\">Home</Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Base title=\"Add Category\" className=\"container bg-success p-4 my-5\">\r\n            <div className=\"row bg-white rounded my-4\">\r\n                <div className=\"col-md-8 offset-md-2\" >\r\n                    {successMsg()}\r\n                    {warningMsg()}\r\n                    {myCategoryForm()}\r\n                    <div className=\"my-2\">\r\n                        {goBack()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Base>\r\n    )\r\n         \r\n}\r\n\r\nexport default CreateCategory","E:\\Backup\\Desktop\\Project\\frontend\\src\\admin\\adminHelper\\index.js",[],"E:\\Backup\\Desktop\\Project\\frontend\\src\\admin\\CreateProduct.js",["89","90","91","92","93","94"],"import React ,{useEffect, useState}from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth/authHelper\";\r\nimport  Base  from \"../core/Base\";\r\nimport { AddProduct, allcategory, } from \"./adminHelper/index\"\r\n\r\nconst CreateProduct = () =>{\r\n    const{ user, token }=isAuthenticated();\r\n    const [values, setValues] = useState({\r\n        name: \"\",\r\n        price: \"\",\r\n        image:\"\",\r\n        condition:\"\",\r\n        categories :[],\r\n        category: \"\",\r\n        error: \"\",\r\n        createdproduct: \"\",\r\n        getRedirect: false,\r\n        loading: false,\r\n        success:false,\r\n        formData: \"\"\r\n    });\r\n\r\n    const {name,price,image,categories,condition,category,error,createdproduct,getRedirect,success,loading,formData} = values;\r\n    const preload =() =>{\r\n        allcategory().then(data => {\r\n                if(data.error){\r\n                  setValues({ ...values, error: data.error });\r\n                }else{\r\n                  setValues({ ...values, categories: data, formData:new FormData() });\r\n                }\r\n        }).catch(err =>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        preload()\r\n    },[] )\r\n\r\n    const handleChange = name => event =>{\r\n        const value = name === \"image\" ? event.target.files[0] : event.target.value;\r\n        formData.set(name, value)\r\n        setValues({ ...values, [name]: value })\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        setValues({ ...values, error:\"\", loading:true });\r\n        //backend request\r\n        AddProduct(user._id, token, formData)\r\n        .then(data => {\r\n          if(data.err){\r\n            setValues({ ...values, error:data.err })\r\n          }\r\n          else if(data.Error){\r\n            setValues({ ...values, error:data.Error })\r\n          }\r\n          else if(data.error){\r\n            setValues({ ...values, error:data.error })\r\n          }\r\n          else{\r\n            setValues({\r\n              ...values,\r\n              name:\"\",\r\n              price:\"\", \r\n              image:\"\",\r\n              condition:\"\",\r\n              category: \"\",\r\n              createdproduct: data.name,\r\n              loading:false,\r\n              success:true\r\n            })\r\n          }\r\n        })\r\n    }\r\n\r\n    const successMsg = () =>{\r\n        return(\r\n          <div className=\"alert alert-success mt-3\" style={{ display: success ? \"\" : \"none\" }}>\r\n              <h4>Product created successfully</h4>\r\n          </div>\r\n        )\r\n    }\r\n\r\n    const errorMsg = () =>{\r\n      return(\r\n        <div className=\"alert alert-warning mt-3\" style={{ display: error ? \"\" : \"none\" }}>\r\n            <h4> {error }</h4>\r\n        </div>\r\n      )\r\n  }\r\n\r\n  const createProductForm = () => (\r\n    <form>\r\n      <span>Post photo</span>\r\n      <div className=\"form-group my-1\">\r\n        <label>\r\n          <input\r\n            onChange={handleChange(\"image\")}\r\n            type=\"file\"\r\n            name=\"photo\"\r\n            accept=\"image\"\r\n            placeholder=\"choose a file\"\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className=\"form-group my-1\">\r\n        <input\r\n          onChange={handleChange(\"name\")}\r\n          name=\"name\"\r\n          className=\"form-control\"\r\n          placeholder=\"Name\"\r\n          value={name}\r\n        />\r\n      </div>\r\n      <div className=\"form-group my-1\">\r\n        <textarea\r\n          onChange={handleChange(\"condition\")}\r\n          name=\"condition\"\r\n          className=\"form-control\"\r\n          placeholder=\"Condition\"\r\n          value={condition}\r\n        />\r\n      </div>\r\n      <div className=\"form-group my-1\">\r\n        <input\r\n          onChange={handleChange(\"price\")}\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          placeholder=\"Price\"\r\n          value={price}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <select\r\n          onChange={handleChange(\"category\")}\r\n          className=\"form-control\"\r\n          placeholder=\"Category\"\r\n        >\r\n          <option>Select</option>\r\n          {categories &&\r\n            categories.map((cate, index) => (\r\n              <option key={index} value={cate._id}>\r\n                {cate.year}\r\n              </option>\r\n            ))}\r\n        </select>\r\n      </div>\r\n      <button\r\n        type=\"submit\"\r\n        onClick={onSubmit}\r\n        className=\"btn btn-outline-success my-3\">\r\n        Create Product\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n    return(\r\n        <Base title=\"Create Your Products\" className=\"bg-success p-4 my-5\">\r\n            <Link className=\"btn  btn-outline-danger my-2\" to=\"/admin/dashboard\">Home</Link>\r\n            <div className=\"row bg-dark text-white rounded\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    { successMsg() }\r\n                    { errorMsg() }\r\n                    { createProductForm() }\r\n                </div>\r\n            </div>\r\n        </Base>\r\n    )\r\n}\r\n\r\nexport  default  CreateProduct;","E:\\Backup\\Desktop\\Project\\frontend\\src\\admin\\ManageCategory.js",["95"],"import React, { useEffect, useState } from \"react\";\r\nimport Base from \"../core/Base\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth/authHelper/index\";\r\nimport { allcategory, deleteCategory } from \"./adminHelper/index\";\r\n\r\nconst ManageCategory =() =>{\r\n\r\n    const [category,setCategory] = useState([])\r\n    const {user, token} = isAuthenticated();\r\n\r\n    const preload = () =>{\r\n        allcategory().then(data => {\r\n            if(data.error){\r\n                console.log(data.error);\r\n             }else{\r\n                  setCategory(data);\r\n              }\r\n              console.log(category)\r\n        })\r\n    }\r\n\r\n    useEffect (()=>{\r\n        preload()\r\n    },[]);\r\n\r\n    //deleting category function\r\n    const deleteCate = CategoryId =>{\r\n        deleteCategory(user._id,token,CategoryId).then(data =>{\r\n            preload()\r\n        }).catch(err => console.log(err)) \r\n    }\r\n\r\n    return(\r\n        <Base title=\"Welcome admin\" description=\"Manage categories here\">\r\n            <Link className=\"btn btn-warning\" to={`/admin/dashboard`}>\r\n                <span className=\"\">Admin Home</span>\r\n            </Link>\r\n            <h2 className=\"mb-4\">All Categories:</h2>\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                {!category.length && (<h2 className=\"text-center text-dark py-4\">No category found</h2>)}\r\n                {category.length>0 && (<h2 className=\"text-center text-dark py-4\">Total {category.length} Categories</h2>)}\r\n                    {\r\n                        category.length>0 && category.map( (category, index) => { \r\n                            return(\r\n                                <div className=\"border border-dark mb-2 \">\r\n                                    <div key ={index} className=\"row text-center mb-2 mt-2\">\r\n                                        <div className=\"col-4\">\r\n                                            <h3 className=\"text-left\">Year {category.year}</h3>\r\n                                        </div>\r\n                                        <div className=\"col-4\">\r\n                                        <Link\r\n                                            className=\"btn btn-success\"\r\n                                            to={`/admin/category/update/${category._id}`}\r\n                                        >\r\n                                            <span className=\"text-dark\">Update</span>\r\n                                        </Link>\r\n                                        </div>\r\n                                        <div className=\"col-4\">\r\n                                            <button onClick={() => {deleteCate(category._id)}} className=\"btn btn-danger text-dark\">\r\n                                                Delete\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                </div>\r\n            </div>\r\n        </Base>\r\n    )\r\n} \r\n\r\nexport default ManageCategory;","E:\\Backup\\Desktop\\Project\\frontend\\src\\admin\\ManageProducts.js",[],"E:\\Backup\\Desktop\\Project\\frontend\\src\\admin\\UpdateCategoy.js",["96"],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":4,"column":17,"nodeType":"103","messageId":"104","endLine":4,"endColumn":25},{"ruleId":"101","severity":1,"message":"105","line":9,"column":34,"nodeType":"103","messageId":"104","endLine":9,"endColumn":38},{"ruleId":"106","severity":1,"message":"107","line":15,"column":21,"nodeType":"108","messageId":"109","endLine":15,"endColumn":22},{"ruleId":"101","severity":1,"message":"110","line":24,"column":23,"nodeType":"103","messageId":"104","endLine":24,"endColumn":28},{"ruleId":"101","severity":1,"message":"111","line":24,"column":50,"nodeType":"103","messageId":"104","endLine":24,"endColumn":58},{"ruleId":"101","severity":1,"message":"112","line":24,"column":65,"nodeType":"103","messageId":"104","endLine":24,"endColumn":79},{"ruleId":"101","severity":1,"message":"113","line":24,"column":80,"nodeType":"103","messageId":"104","endLine":24,"endColumn":91},{"ruleId":"101","severity":1,"message":"114","line":24,"column":100,"nodeType":"103","messageId":"104","endLine":24,"endColumn":107},{"ruleId":"115","severity":1,"message":"116","line":39,"column":7,"nodeType":"117","endLine":39,"endColumn":9,"suggestions":"118"},{"ruleId":"115","severity":1,"message":"116","line":25,"column":7,"nodeType":"117","endLine":25,"endColumn":9,"suggestions":"119"},{"ruleId":"115","severity":1,"message":"120","line":32,"column":8,"nodeType":"117","endLine":32,"endColumn":10,"suggestions":"121"},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'role' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'image' is assigned a value but never used.","'category' is assigned a value but never used.","'createdproduct' is assigned a value but never used.","'getRedirect' is assigned a value but never used.","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'preload'. Either include it or remove the dependency array.","ArrayExpression",["124"],["125"],"React Hook useEffect has a missing dependency: 'match.params.categoryId'. Either include it or remove the dependency array.",["126"],"no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"127","fix":"129"},{"desc":"130","fix":"131"},"Update the dependencies array to be: [preload]",{"range":"132","text":"133"},{"range":"134","text":"133"},"Update the dependencies array to be: [match.params.categoryId]",{"range":"135","text":"136"},[1201,1203],"[preload]",[707,709],[863,865],"[match.params.categoryId]"]